import { AgentsService } from './agents/agents.service';
import { AppService } from './app.service';
import { DemandesService } from './demandes/demandes.service';
import { Response } from 'express';
export declare class AppController {
    private readonly appService;
    private readonly agentService;
    private readonly demandeService;
    constructor(appService: AppService, agentService: AgentsService, demandeService: DemandesService);
    root(req: any): Promise<{
        demandes: {
            user: any;
            length: number;
            toString(): string;
            toLocaleString(): string;
            pop(): {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            };
            push(...items: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[]): number;
            concat(...items: ConcatArray<{
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }>[]): {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[];
            concat(...items: ({
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            } | ConcatArray<{
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }>)[]): {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[];
            join(separator?: string): string;
            reverse(): {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[];
            shift(): {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            };
            slice(start?: number, end?: number): {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[];
            sort(compareFn?: (a: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, b: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }) => number): {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[];
            splice(start: number, deleteCount?: number): {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[];
            splice(start: number, deleteCount: number, ...items: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[]): {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[];
            unshift(...items: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[]): number;
            indexOf(searchElement: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, fromIndex?: number): number;
            lastIndexOf(searchElement: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, fromIndex?: number): number;
            every<S extends {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }>(predicate: (value: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, index: number, array: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[]) => value is S, thisArg?: any): this is S[];
            every(predicate: (value: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, index: number, array: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[]) => unknown, thisArg?: any): boolean;
            some(predicate: (value: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, index: number, array: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[]) => unknown, thisArg?: any): boolean;
            forEach(callbackfn: (value: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, index: number, array: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[]) => void, thisArg?: any): void;
            map<U>(callbackfn: (value: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, index: number, array: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[]) => U, thisArg?: any): U[];
            filter<S_1 extends {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }>(predicate: (value: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, index: number, array: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[]) => value is S_1, thisArg?: any): S_1[];
            filter(predicate: (value: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, index: number, array: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[]) => unknown, thisArg?: any): {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[];
            reduce(callbackfn: (previousValue: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, currentValue: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, currentIndex: number, array: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[]) => {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }): {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            };
            reduce(callbackfn: (previousValue: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, currentValue: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, currentIndex: number, array: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[]) => {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, initialValue: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }): {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            };
            reduce<U_1>(callbackfn: (previousValue: U_1, currentValue: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, currentIndex: number, array: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[]) => U_1, initialValue: U_1): U_1;
            reduceRight(callbackfn: (previousValue: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, currentValue: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, currentIndex: number, array: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[]) => {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }): {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            };
            reduceRight(callbackfn: (previousValue: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, currentValue: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, currentIndex: number, array: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[]) => {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, initialValue: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }): {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            };
            reduceRight<U_2>(callbackfn: (previousValue: U_2, currentValue: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, currentIndex: number, array: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[]) => U_2, initialValue: U_2): U_2;
            find<S_2 extends {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }>(predicate: (this: void, value: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, index: number, obj: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[]) => value is S_2, thisArg?: any): S_2;
            find(predicate: (value: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, index: number, obj: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[]) => unknown, thisArg?: any): {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            };
            findIndex(predicate: (value: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, index: number, obj: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[]) => unknown, thisArg?: any): number;
            fill(value: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, start?: number, end?: number): {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[];
            copyWithin(target: number, start: number, end?: number): {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[];
            entries(): IterableIterator<[number, {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }]>;
            keys(): IterableIterator<number>;
            values(): IterableIterator<{
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }>;
            includes(searchElement: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, fromIndex?: number): boolean;
            flatMap<U_3, This = undefined>(callback: (this: This, value: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }, index: number, array: {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }[]) => U_3 | readonly U_3[], thisArg?: This): U_3[];
            flat<A, D extends number = 1>(this: A, depth?: D): FlatArray<A, D>[];
            [Symbol.iterator](): IterableIterator<{
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            }>;
            [Symbol.unscopables](): {
                copyWithin: boolean;
                entries: boolean;
                fill: boolean;
                find: boolean;
                findIndex: boolean;
                keys: boolean;
                values: boolean;
            };
            at(index: number): {
                Date_Dmde: string;
                Annee_Scolaire_Dmnde: string;
                Dren_Origine_Dmde: string;
                Dren_Destination_Dmde: string;
                Insp_Destination_Dmde: string;
                Insp_Origin_Dmde: string;
                Libelle_Statut_Dmde: string;
                agent_demandeur: import("http").Agent;
                agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
                _id: any;
                __v?: any;
                id?: any;
            };
        };
    }>;
    connexion(req: any): {
        message: string;
    };
    login(req: any, res: Response): Promise<void>;
    inscription(): Promise<void>;
    resultats(): Promise<void>;
    faireUneDemande(payload: any): Promise<import("./agents/Models/agents.model").Agent & import("mongoose").Document<any, any, any> & {
        _id: any;
    }>;
    voirDemande(id: string, req: any): Promise<{
        demande: {
            currentAgent: any;
            hasApplied: boolean;
            Date_Dmde: Date;
            Annee_Scolaire_Dmnde: string;
            Dren_Origine_Dmde: string;
            Dren_Destination_Dmde: string;
            Insp_Destination_Dmde: string;
            Insp_Origin_Dmde: string;
            Libelle_Statut_Dmde: string;
            agent_demandeur: import("http").Agent;
            agents_interesse: import("mongoose").LeanDocument<import("http").Agent>[];
            _id: any;
            __v?: any;
            id?: any;
        };
    }>;
    postResponse(id: string, req: any, res: Response): Promise<void>;
    responseDemande(id: string, req: any): Promise<{
        data: any;
    }>;
    contact(): void;
    dashDmndeur(req: any): Promise<{
        data: {
            nb_permutation: number;
            nb_effectuer: number;
            agent: any;
            answerTime: number;
        };
    }>;
    listeDemande(req: any): Promise<{
        demandes: import("mongoose").LeanDocument<import("./demandes/Models/demandes.model").Demande & import("mongoose").Document<any, any, any> & {
            _id: any;
        }>[];
    }>;
    statusDemande(req: any): void;
    demandeApprouve(req: any): void;
    consultationDemande(id: string, req: any): Promise<{
        demande: import("mongoose").LeanDocument<import("./demandes/Models/demandes.model").Demande & import("mongoose").Document<any, any, any> & {
            _id: any;
        }>;
    }>;
}
